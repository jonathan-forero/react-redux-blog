{"version":3,"sources":["components/Menu.js","actions/users/usersActions.js","actions/users/types.js","components/Users/Users.js","components/Users/index.js","components/App.js","reducers/usersReducer.js","reducers/index.js","index.js"],"names":["Menu","id","to","getAll","dispatch","a","axios","get","response","type","payload","data","console","log","message","Users","setRows","props","users","map","user","key","name","email","website","this","className","React","Component","UsersConnect","connect","reducers","usersReducer","usersActions","Tasks","App","exact","path","component","INITIAL_STATE","combineReducers","state","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"oSAUeA,EAPF,kBACT,yBAAKC,GAAG,QACJ,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,kDCHKC,EAAS,yDAAM,WAAOC,GAAP,eAAAC,EAAA,+EAEGC,IAAMC,IAAI,8CAFb,OAEdC,EAFc,OAGpBJ,EAAS,CACLK,KCPiB,gBDQjBC,QAASF,EAASG,OALF,gDAQpBC,QAAQC,IAAI,SAAU,KAAMC,SARR,yDAAN,uD,wCE+CPC,E,2MA1CbC,QAAU,kBACR,EAAKC,MAAMC,MAAMC,KAAI,SAACC,GAAD,OACnB,wBAAIC,IAAMD,EAAKnB,IACb,4BACImB,EAAKE,MAET,4BACIF,EAAKG,OAET,4BACIH,EAAKI,c,mFAbbC,KAAKR,MAAMd,W,+BAoBX,OACE,6BACE,2BAAOuB,UAAU,SACf,+BACE,4BACE,oCAGA,qCAGA,sCAKJ,+BACID,KAAKT,iB,GAxCCW,IAAMC,WCWXC,EALMC,aAJG,SAACC,GACvB,OAAOA,EAASC,eAKhBC,EAFmBH,CAGnBf,GCNImB,EAAQ,kBAAM,uCAYLC,EAVH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKT,UAAU,UACb,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAYvB,IAClC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,SAASC,UAAYJ,O,wBCVvCK,EAAgB,CAClBrB,MAAO,ICAIsB,cAAgB,CAC3BR,aDEW,WAAoC,IAAnCS,EAAkC,uDAA1BF,EAAeG,EAAW,uCAC9C,OAAQA,EAAOjC,MACX,IJRqB,gBISjB,OAAO,eAAIgC,EAAX,CAAkBvB,MAAOwB,EAAOhC,UACpC,QAAS,OAAO+B,MEClBE,EAAQC,YACVb,EACA,GACAc,YAAgBC,MAGpBC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEJM,SAASC,eAAe,W","file":"static/js/main.868a0341.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Menu = () => (\n    <nav id=\"menu\">\n        <Link to=\"/\">Users</Link>\n        <Link to=\"/tasks\">Tasks</Link>\n    </nav>\n);\n\nexport default Menu;\n","import axios from 'axios';\nimport * as ActionType from './types';\n\nexport const getAll = () => async (dispatch) => {\n    try {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n        dispatch({\n            type: ActionType.GET_ALL_USERS,\n            payload: response.data\n        })\n    } catch (error) {\n        console.log('Error;', error.message);\n    }\n}\n","export const GET_ALL_USERS = 'GET_ALL_USERS';\n","import React from 'react';\n\nclass Users extends React.Component {\n\n  componentDidMount() {\n    this.props.getAll();\n  }\n\n  setRows = () => (\n    this.props.users.map((user) => (\n      <tr key={ user.id }>\n        <td>\n          { user.name }\n        </td>\n        <td>\n          { user.email }\n        </td>\n        <td>\n          { user.website }\n        </td>\n      </tr>\n    ))\n  );\n\n  render () {\n    return (\n      <div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>\n                Name\n              </th>\n              <th>\n                Email\n              </th>\n              <th>\n                Link\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.setRows() }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","import { connect } from 'react-redux';\nimport * as usersActions from '../../actions/users/usersActions';\nimport Users from './Users';\n\nconst mapStateToProps = (reducers) => {\n  return reducers.usersReducer;\n};\n\nconst UsersConnect = connect(\n  mapStateToProps,\n  usersActions\n)(Users);\n\nexport default UsersConnect;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Menu from './Menu';\nimport Users from './Users';\n\nconst Tasks = () => <div>Tasks</div>;\n\nconst App = () => (\n  <BrowserRouter>\n    <Menu />\n    <div className=\"margin\">\n      <Route exact path='/' component={ Users } />\n      <Route exact path='/tasks' component={ Tasks } />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import * as ActionType from '../actions/users/types';\n\nconst INITIAL_STATE = {\n    users: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ActionType.GET_ALL_USERS:\n            return {...state, users: action.payload}\n        default: return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n    usersReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(\n    reducers, // Reducers\n    {},  // Initial State\n    applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}